{"textDocument":{"languageId":"go","text":"// Copyright 2019 The Go Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style\n// license that can be found in the LICENSE file.\n\n// The gopls command is an LSP server for Go.\n// The Language Server Protocol allows any text editor\n// to be extended with IDE-like features;\n// see https://langserver.org/ for details.\n//\n// See https://github.com/golang/tools/tree/master/gopls\n// for the most up-to-date information on the gopls status.\npackage main // import \"golang.org/x/tools/gopls\"\n\nimport (\n\t\"context\"\n\t\"io\"\n\t\"log\"\n\t\"os\"\n\n\t\"golang.org/x/tools/gopls/internal/hooks\"\n\t\"golang.org/x/tools/internal/lsp/cmd\"\n\t\"golang.org/x/tools/internal/tool\"\n)\n\nfunc main() {\n\tctx := context.Background()\n\t// RDWRはreadとwrite。パーミッションで0666は読み書きができるユーザーその他。\n\n\tlogfile, _ := os.OpenFile(\"/home/kurenaif/Desktop/tools/gopls/test.log\", os.O_RDWR|os.O_CREATE|os.O_APPEND, 0666)\n\tmultiLogFile := io.MultiWriter(os.Stdout, logfile)\n\tlog.SetFlags(log.Ldate | log.Ltime | log.Llongfile)\n\tlog.SetOutput(multiLogFile)\n\n\t// io.MultiWriteで、\n\t// 標準出力とファイルの両方を束ねて、\n\t// logの出力先に設定する\n\tlog.SetOutput(io.MultiWriter(logfile, os.Stdout))\n\tlog.Println(\"LSP Start\")\n\ttool.Main(ctx, cmd.New(\"gopls\", \"otu\", nil, hooks.Options), os.Args[1:])\n\tlog.Println(\"LSP End\")\n}\n","uri":"file:///home/kurenaif/Desktop/tools/gopls/main.go","version":0}
